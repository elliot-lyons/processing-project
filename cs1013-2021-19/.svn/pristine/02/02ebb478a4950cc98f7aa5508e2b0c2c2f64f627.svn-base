class DateGraph
{
  private double xRatio;
  private double maxHeight;
  private double barHeight;

  ArrayList theList;
  covidDataRow currentRow;

  GraphBar graphBar;
  GraphBar[] graphBarList;

  DateGraph(ArrayList<covidDataRow> aList)
  { 
    theList = aList;                                
    graphBarList = new GraphBar[TOTAL_MONTHS]; 
    xRatio = (double) GRAPH_X / (double) TOTAL_MONTHS;                                                       // this determines the spacing on the x-axis for the month labels

    initArray(graphBarList);
    maxHeight = maxCases();
  }

  void draw()
  {
    strokeWeight(1);
    background(255);
    stroke(0);
    textFont(ArialMtTwelve);
    line(LEFT_GRAPH_X_ORIGIN, GRAPH_Y_ORIGIN, LEFT_GRAPH_X_ORIGIN + GRAPH_X, GRAPH_Y_ORIGIN);                  // this draws the x-axis

    line(LEFT_GRAPH_X_ORIGIN, GRAPH_Y_ORIGIN, LEFT_GRAPH_X_ORIGIN, GRAPH_Y_ORIGIN - GRAPH_Y);                  // this draws the y-axis

    createAxes(allMonths, xRatio);                                                                            // this adds the appropriate labels to the axes

    for (int i = 0; i < graphBarList.length; i++)
    {
      graphBar = graphBarList[i];
      barHeight  = graphBar.currentCases * (GRAPH_Y / maxHeight);
      graphBarList[i].mouseMoved(barHeight);
      stroke(graphBarList[i].strokeColor);
      fill(graphBar.colorNo, 100, 100);

      rect((float) (graphBar.xOrigin), (float) (graphBar.yLimit - (graphBar.currentCases * (GRAPH_Y / maxHeight))), (float) graphBar.xRatio, // draws the bars
        (float) barHeight);                                                                                      

      fill(0);
      text(graphBar.currentCases, (float) (graphBar.currentCases < 1000000 ? (graphBar.xOrigin + 25) : graphBar.xOrigin), (float)                 // draws the number of cases                                                     
        (graphBar.yLimit - (graphBar.currentCases * (GRAPH_Y / maxHeight)) - GRAPH_X_TEXT_MARGIN));

      text("cases", (float) (graphBar.xOrigin + 15), (float) (graphBar.yLimit - (graphBar.currentCases * (GRAPH_Y / maxHeight)) - 5));            // draws "cases"
    }
  }


  void createAxes(String[] anArray, double xRatio)
  {
    double xRat = xRatio;

    for (int i = 0; i < anArray.length; i++)
    {
      String currentString = "" + anArray[i];
      text(currentString, (float) (LEFT_GRAPH_X_ORIGIN + (i * xRat) + (xRat / 4)), // this outputs each month onto the screen and puts it into the correct position
        (float) (GRAPH_Y_ORIGIN + GRAPH_X_TEXT_MARGIN));                                                                // onto the x-axis as a label 

      line((float) (LEFT_GRAPH_X_ORIGIN +(xRat * (i + 1))), (float) GRAPH_Y_ORIGIN, // this adds a little vertical line divider between the x-axis labels 
        (float) (LEFT_GRAPH_X_ORIGIN +(xRat * (i + 1))), (float) GRAPH_Y_ORIGIN - 5);
    }

    text((int) maxHeight, (float) LEFT_GRAPH_X_ORIGIN - GRAPH_Y_TEXT_MARGIN, (float) GRAPH_Y_ORIGIN - GRAPH_Y);         // this prints the number of the heighest cases at the top of the y-axis
    line((float) LEFT_GRAPH_X_ORIGIN, (float) (GRAPH_Y_ORIGIN - GRAPH_Y), 
      (float) LEFT_GRAPH_X_ORIGIN + DIVIDER_LINE, (float) (GRAPH_Y_ORIGIN - GRAPH_Y));                                // this adds a little horizontal divider line to the top of the y-axis

    for (int i = 0; i < maxHeight; i = i + 100000000)                                                                 // this loop labels the y-axis in intervals of 100,000,000 cases
    {                                                                                                                 // it also puts a little horizontal divider at those intervals
      text(i, (float) (i == 0 ? LEFT_GRAPH_X_ORIGIN - 10 : LEFT_GRAPH_X_ORIGIN - GRAPH_Y_TEXT_MARGIN), 
        (float) (GRAPH_Y_ORIGIN - (i * (GRAPH_Y / maxHeight))) + DIVIDER_LINE);

      line((float) LEFT_GRAPH_X_ORIGIN, (float) (GRAPH_Y_ORIGIN - (i * (GRAPH_Y / maxHeight))), 
        (float) LEFT_GRAPH_X_ORIGIN + DIVIDER_LINE, (float) (GRAPH_Y_ORIGIN - (i * (GRAPH_Y / maxHeight))));
    }
  }

  void initArray(GraphBar[] theBars)                                                                              // this creates an array, of type GraphBar, of graph bars
  {
    for (int i = 0; i < theBars.length; i++)
    {
      theBars[i] = new GraphBar(allMonths[i], xRatio, (i * 10), (float) (LEFT_GRAPH_X_ORIGIN + (i * xRatio)), (float) GRAPH_Y_ORIGIN, theList);
      println((LEFT_GRAPH_X_ORIGIN + (i * xRatio)));
    }
  }

  double maxCases()                                                                                              // this returns the max amount of cases in an array
  {
    double max = 0;

    for (int i = 0; i < graphBarList.length; i++)
    {
      double current = graphBarList[i].getCurrentCases();

      if (current > max)
      {
        max = current;
      }
    }

    return max;
  }

  void checkBarPress() {
    for (int i = 0; i < graphBarList.length; i++) 
    {
      graphBarList[i].barMousePressed();
    }
  }



  //void drawArray(GraphBar[] theBars)
  //{
  //  for (int i = 0; i < theBars.length; i++)
  //  {
  //    theBars[i].draw();
  //  }
  //}
}
